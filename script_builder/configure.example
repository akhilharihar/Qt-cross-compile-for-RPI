#!/bin/bash

#Variables Start=========================================================================#

QtFLocation="$HOME" # Where you want to install qt binaries.

# RPI_DEVICE values- 
# 1. linux-rasp-pi-g++
# 2. linux-rasp-pi2-g++
# 3. linux-rasp-pi3-g++ - default
RPI_DEVICE="linux-rasp-pi3-g++"

# qtscript, qtwayland will be skipped by default.
SKIP_MODULES=()

#Variables End===========================================================================#

QTM="5.12" # Qt major release
QTmi="10" # QT Minor release

Qt="${QTM}.${QTmi}"

Qt_ROOT="${QtFLocation}/Qt${Qt}_rpi/"

# Download all dependencies

echo "Installing dependencies"

sudo apt-get install pkg-config wget build-essential unzip bison gperf flex libclang-dev -qq

if [[ ! -d "${PWD}/rpi_tools" ]]; then
    echo "Downloading cross compilers to rpi_tools folder"
    wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
    tar -xf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
    mv gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf rpi_tools
    rm gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
fi

if [[ ! -d "${PWD}/qt-everywhere-src-${Qt}" ]]; then
    echo "Downloading Qt source package"
    if [[ ! -f "${PWD}/qt-everywhere-src-${Qt}.tar.xz" ]]; then
        wget https://download.qt.io/official_releases/qt/"$QTM"/"$Qt"/single/qt-everywhere-src-"$Qt".tar.xz
    fi
    tar xf qt-everywhere-src-"$Qt".tar.xz
    rm qt-everywhere-src-"$Qt".tar.xz

    ***CONTENT_TO_BE_REPLACED***

fi

if  [[ ! -d "${PWD}/sysroot" ]]; then
    echo "Downloading RPI sysroot"
    wget https://github.com/akhilharihar/Qt-cross-compile-for-RPI/releases/download/v1.0/sysroot.tar.xz

    tar xf sysroot.tar.xz
    rm sysroot.tar.xz
fi

if [[ -d "$PWD"/build ]]; then
    echo "build folder detected. Deleting it to prevent configuration errors."
    rm -rf "$PWD"/build
fi

mkdir "$PWD"/build && cd "$PWD"/build

SKPM="-skip qtscript -skip qtwayland" 

for i in ${SKIP_MODULES[@]}; do
SKPM=$SKPM" -skip ${i}"
done

# Directly running the configure command throws -skip as unknown command line argument error. Reason - Hmmmm, Could not figure out proper search term to google. So outputting the configure command to a temp file. 

echo "$PWD"/../qt-everywhere-src-"$Qt"/configure -release -opengl es2 -device "$RPI_DEVICE" -device-option CROSS_COMPILE="${PWD}"/../rpi_tools/bin/arm-linux-gnueabihf- -sysroot "$PWD"/../sysroot -prefix /usr/local/qt5 -hostprefix "$Qt_ROOT"qt_tools -extprefix "$Qt_ROOT"qt -opensource -confirm-license -make libs "$SKPM" -no-use-gold-linker > /tmp/temp_qt_build_command.txt

cat /tmp/temp_qt_build_command.txt | bash

echo "\$Qt_ROOT value - ${Qt_ROOT}"

# Ain't deleting the tmp file. Let user system take care of it.